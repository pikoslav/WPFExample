//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float AspectRatio;
//   float Bands;
//   float2 Center;
//   float Strength;
//   sampler2D Texture1Sampler;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Center          c0       1
//   Bands           c1       1
//   Strength        c2       1
//   AspectRatio     c3       1
//   Texture1Sampler s0       1
//

    ps_2_0
    def c4, 0.00999999978, 0, 0.0208350997, -0.0851330012
    def c5, 0.180141002, -0.330299497, 0.999866009, -0.25
    def c6, 0, 1, -2, 1.57079637
    def c7, -0, -3.14159274, -0.5, -0.75
    def c8, 8, 1, 0.159154937, 0.5
    def c9, 6.28318548, -3.14159274, 0, 0
    def c10, -1.55009923e-006, -2.17013894e-005, 0.00260416674, 0.00026041668
    def c11, -0.020833334, -0.125, 1, 0.5
    dcl t0.xy  // uv<0,1>
    dcl_2d s0

#line 48 "d:\dev\WPFExample\WPFExample\BandedSwirl_PS3.fx"
    mov r0.w, c4.x
    mul r0.x, r0.w, c0.x  // ::centerNormalized<0>

#line 52
    mov r0.x, -r0.x

#line 49
    mul r0.z, r0.w, c0.y  // ::centerNormalized<1>

#line 52
    mov r0.y, -r0.z
    add r0.xy, r0, t0  // ::dir<0,1>

#line 55
    abs r0.z, r0.x
    rcp r1.w, c3.x
    mul r0.y, r0.y, r1.w  // ::dir<1>
    abs r1.x, r0.y
    max r2.w, r1.x, r0.z
    rcp r1.y, r2.w
    min r2.x, r0.z, r1.x
    add r0.z, r0.z, -r1.x
    cmp r0.z, r0.z, c6.x, c6.y
    mul r1.x, r1.y, r2.x
    mul r1.y, r1.x, r1.x
    mad r1.z, r1.y, c4.z, c4.w
    mad r1.z, r1.y, r1.z, c5.x
    mad r1.z, r1.y, r1.z, c5.y
    mad r1.y, r1.y, r1.z, c5.z
    mul r1.x, r1.y, r1.x
    mad r1.y, r1.x, c6.z, c6.w
    mad r0.z, r1.y, r0.z, r1.x
    cmp r1.x, r0.x, c7.x, c7.y
    add r0.z, r0.z, r1.x
    add r1.x, r0.z, r0.z
    max r1.y, r0.y, r0.x
    cmp r1.y, r1.y, c6.y, c6.x
    min r1.z, r0.x, r0.y
    dp2add r1.w, r0, r0, c4.y
    rsq r1.w, r1.w
    rcp r1.w, r1.w  // ::dist<0>
    cmp r0.x, r1.z, c4.y, r1.y
    mad r0.x, r0.x, -r1.x, r0.z  // ::angle<0>
    mul r0.y, r1.w, c1.x
    frc r0.y, r0.y  // ::remainder<0>

#line 68
    add r0.z, r0.y, c7.w

#line 75
    mad r1.x, r0.z, -c8.x, c8.y
    cmp r0.z, r0.z, -r1.x, -c6.y  // ::fac<0>

#line 63
    add r1.x, r0.y, c7.z

#line 59
    add r0.y, r0.y, c5.w

#line 66
    mad r1.y, r0.y, -c8.x, c8.y  // ::fac<0>

#line 76
    cmp r0.z, r1.x, r0.z, r1.y  // ::fac<0>
    cmp r0.y, r0.y, r0.z, c6.y  // ::fac<0>
    mul r0.y, r0.y, c2.x
    mad r0.x, r0.y, r1.w, r0.x  // ::newAngle<0>
    mad r0.x, r0.x, c8.z, c8.w
    frc r0.x, r0.x
    mad r0.x, r0.x, c9.x, c9.y
    sincos r2.xy, r0.x, c10, c11  // ::newDir<0,1>
    mul r2.y, r2.y, c3.x  // ::newDir<1>
    mul r0.xy, r1.w, r2
    mad r1.x, c0.x, r0.w, r0.x  // ::samplePoint<0>
    mad r1.y, c0.y, r0.w, r0.y  // ::samplePoint<1>
    texld r0, r1, s0  // ::main<0,1,2,3>
    mov oC0, r0  // ::main<0,1,2,3>

// approximately 65 instruction slots used (1 texture, 64 arithmetic)
